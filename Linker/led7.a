;/*****************************************************************************
; *   @file
; *   @brief  Source file of
; *   @author Kyle
; *   @version 1.0.0
; *   @note :    1.
; *              2.
; *              3.
;********************************************************************************/
;
;
;/******************************************************************************/
;/***************************** Include Files **********************************/
;/******************************************************************************/
;#include "led7.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;/******************************************************************************/
;/************************* Global variable declaration ************************/
;/******************************************************************************/
;char Num[11]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X27,0X7F,0X6F};  //0~9 ????  FND2

	.DSEG
;int FndCnt;
;
;/******************************************************************************/
;/************************** Functions Implementation **************************/
;/******************************************************************************/
;
;void Led7Disp(int value)
; 0007 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0007 001D     char j,k,l,m = 0;
; 0007 001E     static int cnt = 0;
; 0007 001F     cnt++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	value -> Y+4
;	j -> R17
;	k -> R16
;	l -> R19
;	m -> R18
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0007 0020     j=value/1000;          //-------1000???
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0007 0021     k=(value%1000)/100;    //-------100???
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0007 0022     l=(value%100)/10;      //-------10???
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0007 0023     m=(value%10);          //-------1???
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0007 0024 
; 0007 0025     switch(cnt)
;PCODE: $0000002D VOL: 0
; 0007 0026     {
; 0007 0027         case 1:
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0007 0028         SET_CON=FND1_ON|FND2_OFF|FND3_OFF|FND4_OFF;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0007 0029         LCD_DATABUS=Num[j]; //1000???
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0007 002A         break;
;PCODE: $00000037 VOL: 0
; 0007 002B         case 2:
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0007 002C         SET_CON=FND2_ON|FND1_OFF|FND3_OFF|FND4_OFF;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0007 002D         LCD_DATABUS=Num[k]; //100? ??
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0007 002E         break;
;PCODE: $00000042 VOL: 0
; 0007 002F         case 3:
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0007 0030         SET_CON=FND3_ON|FND1_OFF|FND2_OFF|FND4_OFF;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0007 0031         LCD_DATABUS=Num[l]; //10? ??
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0007 0032         break;
;PCODE: $0000004D VOL: 0
; 0007 0033         case 4:
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0007 0034         SET_CON=FND4_ON|FND1_OFF|FND2_OFF|FND3_OFF;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0007 0035         LCD_DATABUS=Num[m]; //1? ??
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0007 0036         break;
;PCODE: $00000058 VOL: 0
; 0007 0037         default:cnt=0; //cnt ???
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0007 0038     }
;PCODE: $0000005C VOL: 0
; 0007 0039 
; 0007 003A //    SET_CON=FND1_ON|FND2_OFF|FND3_OFF|FND4_OFF;
; 0007 003B //    LCD_DATABUS=Num[j]; //1000???
; 0007 003C //
; 0007 003D //    SET_CON=FND2_ON|FND1_OFF|FND3_OFF|FND4_OFF;
; 0007 003E //    LCD_DATABUS=Num[k]; //100? ??
; 0007 003F //
; 0007 0040 //    SET_CON=FND3_ON|FND1_OFF|FND2_OFF|FND4_OFF;
; 0007 0041 //    LCD_DATABUS=Num[l]; //10? ??
; 0007 0042 //
; 0007 0043 //    SET_CON=FND4_ON|FND1_OFF|FND2_OFF|FND3_OFF;
; 0007 0044 //    LCD_DATABUS=Num[m]; //1? ??
; 0007 0045 
; 0007 0046 
; 0007 0047 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;
;void Led7Disp1(int value)
; 0007 004A {
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0007 004B     MCUCR=0X80; //enable External memory and I/O control
;PCODE: $00000063 VOL: 0
;	value -> Y+0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0007 004C //    LED_CON=0X00;       // LED GLCD Control bus
; 0007 004D 	SET_CON=0X00;       // FND, Bu zzer, RELAY Control bus
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0007 004E //	LCD_CON=0X00;       // TLCD, GLCD Control bus
; 0007 004F 	LCD_DATABUS=0X00;   // TLCD, GLCD, FND, Dotmatrix Data bus
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0007 0050 //	DOT_YELLOW=0X00;    // Dotmatrix Yellow LED
; 0007 0051 //	DOT_RED=0X00;       // Dotmatrix Yellow RED
; 0007 0052 //	STEPMOR=0X00;       // Stepping Motor Control bus
; 0007 0053 //	DCSERVO=0X00;       // DC, Servo Motor Control bus
; 0007 0054 
; 0007 0055     SET_CON=FND4_ON|FND1_OFF|FND2_OFF|FND3_OFF;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0007 0056     LCD_DATABUS=Num[value]; //1? ??
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0007 0057 
; 0007 0058 
; 0007 0059 }
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
