;/*****************************************************************************
; *   @file
; *   @brief  Source file of
; *   @author Kyle
; *   @version 1.0.0
; *   @note :    1.
; *              2.
; *              3.
;********************************************************************************/
;
;
;/******************************************************************************/
;/***************************** Include Files **********************************/
;/******************************************************************************/
;#include "led.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;/******************************************************************************/
;/************************* Global variable declaration ************************/
;/******************************************************************************/
;static volatile unsigned int LedCtrl;
;volatile unsigned int LedCtrl = 0;
;//extern unsigned int LedCtrl;
;//unsigned int LedCtrl = 0;
;
;/******************************************************************************/
;/************************** Functions Implementation **************************/
;/******************************************************************************/
;void LedOn(enum LedEnum led)
; 0001 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 001E     MCUCR=0X80; //enable External memory and I/O control
;PCODE: $0000000F VOL: 0
;	led -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0001 001F     LED_CON=0X00;       // LED GLCD Control bus
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0001 0020 	SET_CON=0X00;       // FND, Bu zzer, RELAY Control bus
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0001 0021 	LCD_CON=0X00;       // TLCD, GLCD Control bus
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0001 0022 	LCD_DATABUS=0X00;   // TLCD, GLCD, FND, Dotmatrix Data bus
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0001 0023 	DOT_YELLOW=0X00;    // Dotmatrix Yellow LED
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 0024 	DOT_RED=0X00;       // Dotmatrix Yellow RED
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0001 0025 	STEPMOR=0X00;       // Stepping Motor Control bus
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0001 0026 	DCSERVO=0X00;       // DC, Servo Motor Control bus
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0001 0027     LedCtrl |= (0x01 << led);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 1
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 1
; 0001 0028     LED_CON  = LedCtrl;
;PCODE: $00000028 VOL: 1
;PCODE: $00000029 VOL: 0
; 0001 0029 }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;
;void LedOff(enum LedEnum led)
; 0001 002C {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 002D     MCUCR=0X80; //enable External memory and I/O control
;PCODE: $0000002F VOL: 0
;	led -> Y+0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0001 002E     LED_CON=0X00;       // LED GLCD Control bus
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 002F 	SET_CON=0X00;       // FND, Bu zzer, RELAY Control bus
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0001 0030 	LCD_CON=0X00;       // TLCD, GLCD Control bus
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0031 	LCD_DATABUS=0X00;   // TLCD, GLCD, FND, Dotmatrix Data bus
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0032 	DOT_YELLOW=0X00;    // Dotmatrix Yellow LED
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 0033 	DOT_RED=0X00;       // Dotmatrix Yellow RED
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0034 	STEPMOR=0X00;       // Stepping Motor Control bus
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 0035 	DCSERVO=0X00;       // DC, Servo Motor Control bus
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 0036     LedCtrl &= ~(0x01 << led);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 1
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 1
; 0001 0037     LED_CON  = LedCtrl;
;PCODE: $00000049 VOL: 1
;PCODE: $0000004A VOL: 0
; 0001 0038 }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
