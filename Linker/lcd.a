;/*****************************************************************************
; *   @file
; *   @brief  Source file of
; *   @author Kyle
; *   @version 1.0.0
; *   @note :    1.
; *              2.
; *              3.
;********************************************************************************/
;
;
;/******************************************************************************/
;/***************************** Include Files **********************************/
;/******************************************************************************/
;#include "lcd.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;/******************************************************************************/
;/************************* Global variable declaration ************************/
;/******************************************************************************/
;int num_cnt1=0;
;int num_cnt2=6;
;unsigned char con=0;
;
;
;flash char str[11][17]={        "===LKEMBEDDED===",
;                                 "====  WWW. =====",
;                                "== LKEMBEDDED.==",
;                                "==== CO.KR =====",
;                                "   Education    ",
;                                "   Development  ",
;                                "  AVR Dev & EDU ",
;                                "  PIC Dev & EDU ",
;                                "  ARM Dev & EDU ",
;                                " PADS Dev & EDU ",
;                                "   Cirquit EDU  "
;                                };
;
;/******************************************************************************/
;/************************** Functions Implementation **************************/
;/******************************************************************************/
;void DisplayClr(void);
;void DisplayClrLine1(void);
;void DisplayClrLine2(void);
;
;
;
;void DisplayLCDLine1(char *string)
; 0004 0030 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0004 0031 
; 0004 0032     int size = strlen(string);
; 0004 0033     int i=0;
; 0004 0034     DisplayClrLine1();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	*string -> Y+4
;	size -> R16,R17
;	i -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0004 0035     clcd_line1();
;PCODE: $00000017 VOL: 0
; 0004 0036 	for(i=0; i<size; ++i){dsp_str_TLCD(' ');}
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0004 0037     clcd_line1();
;PCODE: $00000028 VOL: 0
; 0004 0038     for(i=0; i<size; ++i){dsp_str_TLCD(string[i]);}
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0004 0039 }
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;
;void DisplayLCDLine2(char *string)
; 0004 003C {
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0004 003D 	int size = strlen(string);
; 0004 003E     int i=0;
; 0004 003F     DisplayClrLine2();
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;	*string -> Y+4
;	size -> R16,R17
;	i -> R18,R19
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0004 0040 	clcd_line2();
;PCODE: $0000004A VOL: 0
; 0004 0041     for(i=0; i<size; ++i){dsp_str_TLCD(' ');}
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0004 0042     clcd_line2();
;PCODE: $0000005B VOL: 0
; 0004 0043 	for(i=0; i<size; ++i){dsp_str_TLCD(string[i]);}
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0004 0044 }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;
;void DisplayTest(void)
; 0004 0047 {
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0004 0048 
; 0004 0049 	int i=0;
; 0004 004A 	clcd_line1();
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;	i -> R16,R17
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0004 004B 	for(i=0; i<16; ++i){dsp_str_TLCD(str[num_cnt1][i]);}
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0004 004C 
; 0004 004D 	clcd_line2();
;PCODE: $0000008F VOL: 0
; 0004 004E 	for(i=0; i<16; ++i){dsp_str_TLCD(str[num_cnt2][i]);}
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0004 004F 
; 0004 0050 }
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;
;void DisplayClr(void)
; 0004 0053 {
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0004 0054 
; 0004 0055 	int i=0;
; 0004 0056 	clcd_line1();
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;	i -> R16,R17
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0004 0057 	for(i=0; i<16; ++i){dsp_str_TLCD(' ');}
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0004 0058 
; 0004 0059 	clcd_line2();
;PCODE: $000000BF VOL: 0
; 0004 005A 	for(i=0; i<16; ++i){dsp_str_TLCD(' ');}
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0004 005B 
; 0004 005C }
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;
;void DisplayClrLine1(void)
; 0004 005F {
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0004 0060 	int i=0;
; 0004 0061 	clcd_line1();
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;	i -> R16,R17
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0004 0062 	for(i=0; i<16; ++i){dsp_str_TLCD(' ');}
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0004 0063 
; 0004 0064 }
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;
;void DisplayClrLine2(void)
; 0004 0067 {
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0004 0068 
; 0004 0069 	int i=0;
; 0004 006A 	clcd_line2();
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;	i -> R16,R17
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0004 006B 	for(i=0; i<16; ++i){dsp_str_TLCD(' ');}
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0004 006C 
; 0004 006D }
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;
;void clcd_line1(void)
; 0004 0070 {
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0004 0071     dsp_cmd_TLCD(0x80);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0004 0072 } //line1
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;
;
;void clcd_line2(void)
; 0004 0076 {
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0004 0077     dsp_cmd_TLCD(0XC0);
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0004 0078 } //line2
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;
;
;void dsp_str_TLCD(char n)
; 0004 007C {
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0004 007D     LCD_CON=(con|=0x10);    // E=0, RS=1
;PCODE: $00000115 VOL: 0
;	n -> Y+0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0004 007E     LCD_DATABUS=n;          // 8bit OUTPUT DATA
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0004 007F     LCD_CON=(con|=0x50);    // E=1, RS=1
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0004 0080     delay_us(1);
;PCODE: $00000120 VOL: 0
; 0004 0081     LCD_CON=(con&=~0x40);   // E=0; RS=1;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0004 0082     delay_us(40);
;PCODE: $00000125 VOL: 0
; 0004 0083 }
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;
;void dsp_cmd_TLCD(char n)
; 0004 0086 {
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0004 0087     LCD_CON=(con&=~0x30);      //E=0, RS=0
;PCODE: $0000012B VOL: 0
;	n -> Y+0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0004 0088     LCD_DATABUS=n;             //8bit OUTPUT DATA=0;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0004 0089     LCD_CON=(con|=0X40);       // E=1, RS=0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0004 008A     delay_us(1);
;PCODE: $00000136 VOL: 0
; 0004 008B     LCD_CON=(con&=~0X40);      // E=0, RS=0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0004 008C     delay_us(40);
;PCODE: $0000013B VOL: 0
; 0004 008D }
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;
;void LcdInit() //16x2line
; 0004 0090 {
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0004 0091     LCD_CON=0X00;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0004 0092     LCD_DATABUS=0X00;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0004 0093     //lcd_dt=0; lcd_rw=lcd_rs=lcd_en=0;                                                              Ʈ
; 0004 0094     delay_ms(10); dsp_cmd_TLCD(0x30); //8bit mode
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0004 0095     delay_ms(5);  dsp_cmd_TLCD(0x30);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0004 0096     delay_ms(1);  dsp_cmd_TLCD(0x30);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0004 0097     delay_ms(5);  dsp_cmd_TLCD(0x38); //function set
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0004 0098     dsp_cmd_TLCD(0x0c); //display on/off
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0004 0099     dsp_cmd_TLCD(0x14); //cursor/display
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0004 009A     dsp_cmd_TLCD(0x06); //entry mode
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0004 009B     dsp_cmd_TLCD(0x01); delay_ms(2); //display clear
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0004 009C }
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;
;
